{
  "compilerOptions": {
    /* Basic Options */
    "target": "ESNext", // Modern JavaScript features
    "module": "ESNext", // Use ES modules
    "lib": ["DOM", "DOM.Iterable", "ESNext"], // Include DOM and modern JS APIs
    "jsx": "react-jsx", // React 17+ JSX runtime
    "skipLibCheck": true, // Skip library .d.ts checks for faster builds

    /* Module Resolution */
    "moduleResolution": "node", // Standard Node.js module resolution
    "resolveJsonModule": true, // Allow importing JSON files
    "isolatedModules": true, // Ensure each file can be independently transpiled
    "allowImportingTsExtensions": true, // Allow .ts and .tsx imports

    /* Type Checking */
    "strict": true, // Enable all strict type checks
    "noUnusedLocals": true, // Warn about unused variables
    "noUnusedParameters": true, // Warn about unused function parameters
    "noFallthroughCasesInSwitch": true, // Ensure all switch cases are handled

    /* Paths and BaseUrl (for Absolute Imports) */
    "baseUrl": "./src", // Base directory for imports
    "paths": {
      // Define import shortcuts
      "@components/*": ["components/*"],
      "@utils/*": ["utils/*"],
      "@styles/*": ["styles/*"],
      "@assets/*": ["assets/*"]
    },

    /* Linting and Debugging */
    "noEmit": true, // Prevent emitting files
    "incremental": true, // Speed up builds by reusing previous results

    /* Bundler Mode (if using Vite or Webpack 5) */
    "forceConsistentCasingInFileNames": true, // Enforce case-sensitive imports
    "allowSyntheticDefaultImports": true, // Allow default imports for modules without default export
    "esModuleInterop": true // Enable interoperability with CommonJS modules
  },
  "include": [
    "src/**/*", // Include all TypeScript files in the src directory
    "babel.config.ts", // Include Babel configuration for build
    "vite.config.ts", // Include Vite configuration (if applicable)
    "jest.setup.ts" // Include Jest setup file for tests
  ],
  "exclude": [
    "node_modules", // Exclude node_modules from type checking
    "build", // Exclude build output directory
    "dist", // Exclude distribution files
    "public" // Exclude public folder (if not containing TS files)
  ],
  "types": ["node", "jest", "@testing-library/jest-dom"], // Types for Node.js and Jest
  "references": [
    { "path": "./tsconfig.node.json" } // Reference Node-specific configurations
  ]
}
